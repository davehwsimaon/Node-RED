[
{"id":"1081f98c.614586","type":"websocket out","z":"480a492b.dabc08","name":"","server":"f7085f32.4bb3e","client":"","x":865,"y":431.8000793457031,"wires":[]},
{"id":"fdf4a291.e972e","type":"websocket in","z":"480a492b.dabc08","name":"","server":"f7085f32.4bb3e","client":"","x":436,"y":429.800048828125,"wires":[["d150263b.ccb988"]]},
{"id":"d150263b.ccb988","type":"function","z":"480a492b.dabc08","name":"Get Global context","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n\nmsg.payload = context.global.location;\nreturn msg;","outputs":"1","noerr":0,"x":640,"y":430.80010986328125,"wires":[["1081f98c.614586","81c71068.ce511"]]},
{"id":"4db63cfe.ccba94","type":"template","z":"480a492b.dabc08","name":"HTML output","field":"","fieldType":"msg","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n\n<head>\n    <title>BlueMix Sentiment Twitter Map</title>\n    <script src=\"http://use.edgefonts.net/antic-didone:n4:all.js\"></script>\n    <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=true\"></script>\n    <script type=\"text/javascript\" src=\"http://yourjavascript.com/4594301102/gmaps.js\"></script>\n    <script type=\"text/javascript\" src=\"http://yourjavascript.com/190225905/autolinker-min.js\"></script>\n    <style type=\"text/css\" media=\"screen\">\n        #map {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n        \n        #content {\n            font-size: 10px;\n        }\n        \n        p {\n            font-family: verdana;\n            text-align: center\n        }\n        \n        .maptitle {\n            position: absolute;\n            border-radius: 10px;\n            top: .3em;\n            right: .3em;\n            color: white;\n            background: black;\n            opacity: 0.7;\n            padding: 0 10px;\n        }\n        \n        .titletext {\n            font-family: antic-didone;\n            font-size: 3em;\n            font-weight: 100;\n            margin-top: 0;\n            margin-bottom: 0;\n            line-height: 1em;\n        }\n        \n        .subtitle {\n            color: darkolivegreen;\n            font-size: .8em;\n            line-height: .3em;\n            vertical-align: middle;\n        }\n        \n        .credit {\n            position: absolute;\n            bottom: 0;\n            left: 10em;\n            font-size: .6em;\n            color: #222;\n        }\n        \n        .legend {\n            font-size: .6em;\n            color: #000;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div id=\"map\"></div>\n    <div class=maptitle>\n        <p class=titletext>Tweet Legend</p>\n        <div class=subtitle>\n            <p>Sentiment (negative to positive)</p>\n        </div>\n        <div class=legend>\n            <p>Sentiment:\n                <br>\n                    <img src=\"http://demo-nodered-sam.mybluemix.net/images/tweet-r2.png\">\n                    <img src=\"http://demo-nodered-sam.mybluemix.net/images/tweet-r1.png\">\n                    <img src=\"http://demo-nodered-sam.mybluemix.net/images/tweet-w.png\">\n                    <img src=\"http://demo-nodered-sam.mybluemix.net/images/tweet-g1.png\">\n                    <img src=\"http://demo-nodered-sam.mybluemix.net/images/tweet-g2.png\">\n                </p>\n        </div>\n    </div>\n    <div class=credit>\n        <p>Originally written by Tiran Dagan, IBM October 2015\n           <br>\n           Enhanced by the BlueMix Technical Team, IBM January, 2016</p>\n    </div>\n    <script type=\"text/javascript\">\n        var geocoder = new google.maps.Geocoder();\n        var autolinker = new Autolinker( {\n            newWindow : true,\n            truncate  : 30\n        } );\n        \n        var socketaddy = \"ws://{{req.headers.host}}/ws/location\";\n        var map;\n        var sock;\n        $(document).ready(function()\n        {\n            // Houston Lat Long in Degrees\n            // Latitude: 29.7632836\n            // Longitude: -95.3632715 \n            map = new GMaps({\n                div: '#map',\n                //lat: -12.043333,\n                //lng: -77.028333,\n                lat: 29.7632836,\n                lng: -95.3632715,\n                minZoom: 3\n            });\n            \n            // Use HTML5 geolocation if user allows it.\n            if (navigator.geolocation)\n            {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n\n                    map.setCenter(pos);\n                });\n            }\n\n            \n            map.setZoom (3);\n      \n            sock = new WebSocket(socketaddy);\n            sock.onopen = function()\n            {\n                console.log(\"WebSocket - Connected\");\n                console.log(\"WebSocket - Sending ping\");\n                sock.send(\"Ping.\");\n                console.log(\"WebSocket - Ping sent\");\n            };\n            sock.onerror = function()\n            {\n                console.log(\"WebSocket - Error\");\n            };\n            sock.onmessage = function(evt)\n            {\n                var msgparse = JSON.parse(evt.data);\n                console.log (\"User: @\" + msgparse.user);\n                console.log (msgparse.location );\n                \n                GMaps.geocode({\n                    address: msgparse.location,\n                    callback: function(results, status)\n                    {\n                        if (status == 'OK')\n                        {\n                            var latlng = results[0].geometry.location;\n                            // map.removeMarkers();\n                           \t// map.setCenter(latlng[0].lat, latlng[0].lng);\n                            // Create marker\n                            var infoWindow = new google.maps.InfoWindow({ \n                                content: '<b>heading</b><br>more text'\n                            });\n                    \n                            var infoText = '<b>@' + msgparse.user + ':</b>&nbsp;' + \n                                           '<div id=content>' + msgparse.tweet + '</div>'\n                            var html = autolinker.link( infoText );\n                            \n                            // Sets the Default Tweet Icon\n                            var iconfile = 'http://demo-nodered-sam.mybluemix.net/images/tweet';\n                            var sentimentScore = msgparse.sentiment.score == \"\" ? 0 : parseFloat (msgparse.sentiment.score);\n            \n                            // User NodeRed Sentiment\n                            if (sentimentScore < -6.0) \n                                iconfile += '-r2'\n                            else if (sentimentScore < -2.0)\n                                iconfile += '-r1'\n                            else if (sentimentScore >= -2.0 && sentimentScore < 2.0)\n                                iconfile += '-w'\n                            else if (sentimentScore >= 2.0 && sentimentScore < 6.0)\n                                iconfile += '-g1'\n                            else if (sentimentScore >= 6.0)\n                                iconfile += '-g2';\n            \n                            iconfile += '.png';\n                            console.log ('sentiment ' + JSON.stringify(msgparse.sentiment) + ' score: ' + sentimentScore);\n                            console.log ('--> icon=' + iconfile);\n                            var marker = map.addMarker({\n                                lat: latlng.lat(),\n                                lng: latlng.lng(),\n                                title: msgparse.user,\n                                infoWindow: {\n                                    content: html,\n                                    maxWidth: 300\n                                },\n                                icon: iconfile\n                            });\n                            console.log (\"added marker: \" + marker.title);\n                            // map.setCenter(latlng.lat(), latlng.lng());\n                        }\n                        else\n                        {\n                            console.log (\"GMaps.geocode unsuccessful\");\n                        }\n                    }\n                });\n                console.log (msgparse.tweet);\n            }\n        });\n    </script>\n</body>\n\n</html>","x":644.272705078125,"y":507.07281494140625,"wires":[["6140b33d.043f1c"]]},
{"id":"6140b33d.043f1c","type":"http response","z":"480a492b.dabc08","name":"","x":829.9999732971191,"y":506.80005073547363,"wires":[]},
{"id":"574be875.48f4f8","type":"http in","z":"480a492b.dabc08","name":"","url":"/map","method":"get","swaggerDoc":"","x":424.00000381469727,"y":506.80005073547363,"wires":[["4db63cfe.ccba94"]]},
{"id":"74e23af4.868554","type":"function","z":"480a492b.dabc08","name":"Load map json","func":"// Alchemy Method\n//var sentiment;\n//if (msg.features === undefined)  \n//    sentiment = \"\"\n//else\n//    sentiment =  msg.features[\"doc-sentiment\"];\n\n// NodeRed Sentiment Method\nvar sentiment = msg.sentiment;  //.score\n\nvar msg2 = { payload : {\n\t\tuser: msg.tweet.user.screen_name,\n\t\tlocation: msg.location === undefined ? \"\" : msg.location.place,\n\t\tlang : msg.lang,\n\t\tsentiment: sentiment,\n\t\ttweet: msg.tweet.text}\n\t};\n\n// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\ncontext.global.location = msg2.payload;\nreturn msg2;\n","outputs":1,"noerr":0,"x":630.0000152587891,"y":358.00001525878906,"wires":[["1081f98c.614586"]]},
{"id":"6b78716f.2b7db","type":"function","z":"480a492b.dabc08","name":"Set Payload=Tweet","func":"msg.payload = msg.tweet.text;\nreturn msg;","outputs":1,"noerr":0,"x":435.20001220703125,"y":309.20001220703125,"wires":[["89f26f05.422cd"]]},
{"id":"9df84343.ab248","type":"function","z":"480a492b.dabc08","name":"set _id","func":"msg._id = msg.tweet.id_str;\nreturn msg;","outputs":1,"noerr":0,"x":812,"y":270,"wires":[["dab1f44c.1efd98"]]},
{"id":"a5fc06dc.af8a78","type":"debug","z":"480a492b.dabc08","name":"DEBUG","active":true,"console":"false","complete":"payload","x":439,"y":204,"wires":[]},
{"id":"89f26f05.422cd","type":"sentiment","z":"480a492b.dabc08","name":"","x":635.5,"y":269,"wires":[["74e23af4.868554","9df84343.ab248","72c6211b.857a1"]]},
{"id":"72c6211b.857a1","type":"debug","z":"480a492b.dabc08","name":"DEBUG","active":false,"console":"false","complete":"sentiment.score","x":827.5,"y":214,"wires":[]},{"id":"7637d2b3.57d91c","type":"comment","z":"480a492b.dabc08","name":"ReadMe","info":"Change Get Tweets to all for a lot of data\n\nSample string:  DELOS,WELLCertified,WELLBuilding","x":229.5,"y":194,"wires":[]},
{"id":"dab1f44c.1efd98","type":"cloudant out","z":"480a492b.dabc08","name":"Tweet DB","cloudant":"","database":"tweet_map","service":"demo-nodered-sam-cloudantNoSQLDB","payonly":false,"operation":"insert","x":978.5,"y":268.75,"wires":[]},
{"id":"81c71068.ce511","type":"debug","z":"480a492b.dabc08","name":"","active":true,"console":"false","complete":"true","x":843.076904296875,"y":363.84613037109375,"wires":[]},
{"id":"ed79128.75b6af","type":"twitter in","z":"480a492b.dabc08","twitter":"","tags":"trump,clinton","user":"dm","name":"Get Tweets","topic":"tweets","x":193.49998474121094,"y":324.99998474121094,"wires":[["a5fc06dc.af8a78","6b78716f.2b7db"]]},
{"id":"f7085f32.4bb3e","type":"websocket-listener","z":"","path":"/ws/location","wholemsg":"false"}
]
